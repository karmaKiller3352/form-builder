{"version":3,"sources":["features/FormPage/ui.ts","features/FormPage/constants.ts","components/ui.ts","components/FieldContainer.tsx","components/Input.tsx","components/TextArea.tsx","features/FormPage/FormField.tsx","features/FormPage/index.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Sidebar","Content","ElementWrapper","RemoveIcon","FieldWrapper","Form","form","props","isEditMode","css","Button","button","EMAIL","PHONE","URL","DESCRIPTION","NOTES","SIGNATURE","DATE","STRING_DEFAULTS","type","defaultPlaceholder","TEXTAREA_DEFAULTS","TYPES_MAP","fieldName","placeholder","fieldStyles","error","StyledField","input","StyledTextArea","textarea","StyledContainer","FieldName","ErrorContainer","FieldContainer","children","name","message","Input","fieldInfo","field","disabled","autocomplete","TextArea","FieldComponent","FormField","control","useController","fieldState","validationSchema","yup","shape","email","url","max","min","formFields","ElementList","clickHandler","Fragment","map","item","onClick","FormPreview","fields","removeHandler","index","FormPage","useState","chosenFields","setChosenFields","setEditMode","useForm","mode","resolver","yupResolver","formState","useCallback","prev","concat","filter","_","i","toggleModeHandler","length","Object","keys","errors","GlobalStyles","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"wPAEaA,EAAUC,IAAOC,IAAV,8GAOPC,EAAUF,IAAOC,IAAV,4IAQPE,EAAUH,IAAOC,IAAV,gMAUPG,EAAiBJ,IAAOC,IAAV,mRAgBdI,EAAaL,IAAOC,IAAV,0MAcVK,EAAeN,IAAOC,IAAV,yPAWnBI,GAMOE,EAAOP,IAAOQ,KAAV,uEAIb,SAAAC,GAAK,OAAKA,EAAMC,YAAcC,YAArB,8DAKAC,EAASZ,IAAOa,OAAV,+W,OCjFNC,EAAQ,QAERC,EAAQ,QAERC,EAAM,MAENC,EAAc,cAEdC,EAAQ,QAERC,EAAY,YAEZC,EAAO,OAEPC,EAAkB,CAC7BC,KAAM,OACNC,mBAAoB,cAGTC,EAAoB,CAC/BF,KAAM,WACNC,mBAAoB,mBAQTE,GAAsB,mBAChCX,EADgC,2BAE5BO,GAF4B,IAG/BK,UAAW,QACXC,YAAa,WAJkB,cAMhCZ,EANgC,2BAO5BM,GAP4B,IAQ/BK,UAAW,QACXC,YAAa,WATkB,cAWhCX,EAXgC,2BAY5BK,GAZ4B,IAa/BK,UAAW,MACXC,YAAa,SAdkB,cAgBhCV,EAhBgC,2BAiB5BO,GAjB4B,IAkB/BE,UAAW,cACXC,YAAa,iBAnBkB,cAqBhCT,EArBgC,2BAsB5BM,GAtB4B,IAuB/BE,UAAW,QACXC,YAAa,WAxBkB,cA0BhCR,EA1BgC,2BA2B5BE,GA3B4B,IA4B/BK,UAAW,YACXC,YAAa,eA7BkB,cA+BhCP,EA/BgC,2BALN,CAC3BE,KAAM,iBACNC,mBAAoB,SAGa,IAiC/BG,UAAW,YACXC,YAAa,wBAlCkB,GC7B7BC,EAAcjB,YAAH,8QAEM,SAAAF,GAAK,OAAIA,EAAMoB,MAAQ,MAAO,aAaxCC,EAAc9B,IAAO+B,MAAV,kCACpBH,GAGSI,EAAiBhC,IAAOiC,SAAV,kCACvBL,GAGSM,GAAkBlC,IAAOC,IAAV,mEAKfkC,GAAYnC,IAAOC,IAAV,oKAEA,SAAAQ,GAAK,OAAIA,EAAMC,WAAa,UAAY,UAQjD0B,GAAiBpC,IAAOC,IAAV,sJ,QC1BZoC,GAVwE,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,KAAMV,EAAwB,EAAxBA,MAAOnB,EAAiB,EAAjBA,WAC/G,OACE,gBAACwB,GAAD,WACE,eAACC,GAAD,CAAWzB,WAAYA,EAAvB,SAAoC6B,IACpC,eAACH,GAAD,iBAAiBP,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAOW,UACvBF,MCIQG,GAR0B,SAAChC,GACxC,OACE,eAAC,GAAD,CAAgB8B,KAAM9B,EAAMiC,UAAUhB,UAAWG,MAAOpB,EAAMoB,MAAOnB,WAAYD,EAAMC,WAAvF,SACE,eAACoB,EAAD,uCAAiBrB,EAAMiC,WAAejC,EAAMkC,OAA5C,IAAmDd,MAAOpB,EAAMoB,MAAOe,UAAWnC,EAAMC,WAAYmC,aAAa,iBCMxGC,GAR6B,SAACrC,GAC3C,OACE,eAAC,GAAD,CAAgB8B,KAAM9B,EAAMiC,UAAUhB,UAAWG,MAAOpB,EAAMoB,MAAOnB,WAAYD,EAAMC,WAAvF,SACE,eAACsB,EAAD,uCAAoBvB,EAAMiC,WAAejC,EAAMkC,OAA/C,IAAsDd,MAAOpB,EAAMoB,MAAOe,UAAWnC,EAAMC,iBCA3FqC,GAA4C,SAACtC,GACjD,OAAQA,EAAMiC,UAAUpB,MACtB,IAAK,WACH,OAAO,eAAC,GAAD,eAAcb,IAEvB,QACE,OAAO,eAAC,GAAD,eAAWA,MAeTuC,GAXyB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASP,EAAkC,EAAlCA,UAAWH,EAAuB,EAAvBA,KAAM7B,EAAiB,EAAjBA,WAAiB,EACtDwC,YAAc,CAC1CD,UACAV,SAFMI,EAD4E,EAC5EA,MAAOQ,EADqE,EACrEA,WAMf,OAAO,eAAC,GAAD,CAAgBT,UAAWA,EAAWC,MAAOA,EAAOd,MAAOsB,EAAWtB,MAAOnB,WAAYA,KCf5F0C,GAAmBC,MAAaC,OAAb,mBACtBxC,EAAQuC,MAAaE,SADC,cAEtBvC,EAAMqC,MAAaG,OAFG,cAGtBzC,EAAQsC,MAAaI,IAAI,IAAIC,IAAI,IAHX,cAItBzC,EAAcoC,MAAaI,IAAI,KAAKC,IAAI,IAJlB,cAKtBxC,EAAQmC,MAAaI,IAAI,KAAKC,IAAI,IALZ,cAMtBvC,EAAYkC,MAAaI,IAAI,IAAIC,IAAI,IANf,cAOtBtC,EAAOiC,OAPe,IAWnBM,GAAa,CACjB7C,EAAOC,EAAOC,EAAKC,EAAaC,EAAOC,EAAWC,GAG9CwC,GAAuC,SAAC,GAAkC,IAAhCD,EAA+B,EAA/BA,WAAYE,EAAmB,EAAnBA,aAC1D,OACE,eAAC,IAAMC,SAAP,UACGH,EAAWI,KACV,SAACC,GAAD,OACE,eAAC5D,EAAD,CAAgB6D,QAAS,kBAAMJ,EAAaG,IAA5C,SAAoDvC,EAAUuC,GAAMtC,kBAOxEwC,GAAsC,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,cAAe1D,EAA0B,EAA1BA,WAAYuC,EAAc,EAAdA,QAChF,OACE,eAAC1C,EAAD,CAAMG,WAAYA,EAAlB,SACGyD,EAAOJ,KACN,SAACC,EAAgBK,GAAjB,OACE,gBAAC/D,EAAD,WACE,eAAC,GAAD,CAAWoC,UAAWjB,EAAUuC,GAAOzB,KAAMyB,EAAMf,QAASA,EAASvC,WAAYA,IAEhFA,GAAc,eAACL,EAAD,CAAY4D,QAAS,kBAAMG,EAAcC,eAkDrDC,GAzCE,WAAO,IAAD,EACmBC,mBAAS,IAD5B,mBACdC,EADc,KACAC,EADA,OAEaF,oBAAS,GAFtB,mBAEd7D,EAFc,KAEFgE,EAFE,OAIUC,YAAqB,CAClDC,KAAM,WACNC,SAAUC,YAAY1B,MAFhBH,EAJa,EAIbA,QAAS8B,EAJI,EAIJA,UAKXlB,EAAemB,uBACnB,SAACtD,GAAD,OAAehB,GAAc+D,GAAgB,SAAAQ,GAAI,OAAIA,EAAKC,OAAOxD,QACjE,CAAChB,IAGG0D,EAAgBY,uBACpB,SAACX,GAAD,OAAW3D,GAAc+D,GAAgB,SAAAQ,GAAI,OAAIA,EAAKE,QAAO,SAACC,EAAGC,GAAJ,OAAUhB,IAAUgB,UACjF,CAAC3E,IAGG4E,EAAoBN,uBACxB,kBAAMN,GAAY,SAAAO,GAAI,OAAKA,OAC3B,IAGF,OACE,gBAAClF,EAAD,WACE,eAACG,EAAD,UACE,eAAC,GAAD,CAAayD,WAAYA,GAAYE,aAAcA,MAErD,gBAAC1D,EAAD,WACE,eAAC,GAAD,CAAagE,OAAQK,EAAcJ,cAAeA,EAAe1D,WAAYA,EAAYuC,QAASA,IAGjGuB,EAAae,OAAS,GAA8C,IAAzCC,OAAOC,KAAKV,EAAUW,QAAQH,QACxD,gBAAC3E,EAAD,CAAQqD,QAASqB,EAAjB,UAAqC5E,EAAa,UAAY,OAA9D,cCrFJiF,GAAeC,YAAH,iLAsBHC,OATf,WACE,OACE,gBAAC,IAAM/B,SAAP,WACE,eAAC6B,GAAD,IACA,eAAC,GAAD,QCfNG,IAASC,OACL,eAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c410c263.chunk.js","sourcesContent":["import styled, { css } from 'styled-components'\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  background-color: #fffffe;\n`\n\nexport const Sidebar = styled.div`\n  flex-direction: row;\n  padding: 20px;\n  border: 3px solid #317ac3;\n  border-right: none;\n  width: 300px;\n`\n\nexport const Content = styled.div`\n  width: calc(100% - 300px);\n  flex-direction: column;\n  padding: 20px;\n  height: 100%;\n  border: 3px solid #317ac3;\n  align-items: center;\n  display: flex;\n`\n\nexport const ElementWrapper = styled.div<any>`\n  padding: 15px 10px;\n  background-color: #317ac3;\n  border-radius: 10px;\n  margin-bottom: 5px;\n  color: #fff;\n  font-weight: bold;\n  font-size: 14px;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n    transform: scaleY(1.05);\n  }\n`\n\nexport const RemoveIcon = styled.div<any>`\n  position: absolute;\n  right: 0;\n  top: 0;\n  display: none;\n\n  ::after {\n    content: 'âœ–';\n    font-size: 25px;\n    cursor: pointer;\n    color: #317ac3;\n  }\n`\n\nexport const FieldWrapper = styled.div`\n  width: 100%;\n  position: relative;\n  padding: 25px 0px 10px;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  \n  &:hover {\n    ${RemoveIcon} {\n      display: block;\n    }\n  }\n`\n\nexport const Form = styled.form<{ isEditMode: boolean }>`\n  width: 100%;\n  padding: 15px;\n\n  ${props => !props.isEditMode && css`\n    background-color: #eee;\n  `}\n`\n\nexport const Button = styled.button`\n  background-color: #317ac3;\n  border-radius: 10px;\n  font-size: 25px;\n  width: 200px;\n  height: 50px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  color: #fff;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  margin-top: 50px;\n\n  &:hover {\n    opacity: 0.9;\n    transform: scaleY(1.05);\n  }\n`\n\n\n","import { FormElement } from './interfaces';\n\nexport const EMAIL = 'email'\n\nexport const PHONE = 'phone'\n\nexport const URL = 'url'\n\nexport const DESCRIPTION = 'description'\n\nexport const NOTES = 'notes'\n\nexport const SIGNATURE = 'signature'\n\nexport const DATE = 'date'\n\nexport const STRING_DEFAULTS = {\n  type: 'text',\n  defaultPlaceholder: 'Text Field',\n}\n\nexport const TEXTAREA_DEFAULTS = {\n  type: 'textarea',\n  defaultPlaceholder: 'Text Area Field',\n}\n\nexport const DATE_DEFAULTS = {\n  type: 'datetime-local',\n  defaultPlaceholder: 'Date'\n}\n\nexport const TYPES_MAP: FormElement = {\n  [EMAIL]: {\n    ...STRING_DEFAULTS,\n    fieldName: 'Email',\n    placeholder: 'Email'\n  },\n  [PHONE]: {\n    ...STRING_DEFAULTS,\n    fieldName: 'Phone',\n    placeholder: 'Phone'\n  },\n  [URL]: {\n    ...STRING_DEFAULTS,\n    fieldName: 'Url',\n    placeholder: 'Url'\n  },\n  [DESCRIPTION]: {\n    ...TEXTAREA_DEFAULTS,\n    fieldName: 'Description',\n    placeholder: 'Description'\n  },\n  [NOTES]: {\n    ...TEXTAREA_DEFAULTS,\n    fieldName: 'Notes',\n    placeholder: 'Notes'\n  },\n  [SIGNATURE]: {\n    ...STRING_DEFAULTS,\n    fieldName: 'Signature',\n    placeholder: 'Signature'\n  },\n  [DATE]: {\n    ...DATE_DEFAULTS,\n    fieldName: 'Date/Time',\n    placeholder: 'yyyy-MM-dd hh:mm:a'\n  }\n}","import styled, { css } from 'styled-components'\n\nconst fieldStyles = css<any>`\n  width: 100%;\n  border: 1px solid ${ props => props.error ? 'red': '#317ac3'};\n  padding: 10px;\n  border-radius: 3px;\n  font-size: 25px;\n  color: #317ac3;\n  background-color: inherit;\n  filter: none;\n\n  &:-webkit-autofill {\n    background-color: inherit!important;\n  }\n`\n\nexport const StyledField = styled.input`\n  ${fieldStyles}\n`\n\nexport const StyledTextArea = styled.textarea`\n  ${fieldStyles}\n`\n\nexport const StyledContainer = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nexport const FieldName = styled.div<{isEditMode?: boolean}>`\n  position: absolute;\n  background-color: ${props => props.isEditMode ? '#fffffe' : '#eee'};\n  color: #317ac3;\n  font-size: 13px;\n  padding: 0 5px;\n  top: -7px;\n  left: 10px;\n`\n\nexport const ErrorContainer = styled.div`\n  position: absolute;\n  left: 10px;\n  text-transform: capitalize;\n  bottom: -17px;\n  color: red;\n  font-size: 13px;\n`","import React from \"react\";\n\nimport { StyledContainer, FieldName, ErrorContainer } from \"./ui\";\n\nconst FieldContainer: React.FC<({ name: string, error?: any, isEditMode: boolean })> = ({ children, name, error, isEditMode }) => {\n  return (\n    <StyledContainer>\n      <FieldName isEditMode={isEditMode}>{name}</FieldName>\n      <ErrorContainer>{error?.message}</ErrorContainer>\n      {children}\n    </StyledContainer>\n  )\n}\n\nexport default FieldContainer","import React from \"react\";\nimport FieldContainer from \"./FieldContainer\";\nimport { IFieldComponent } from \"./interfaces\";\nimport { StyledField } from \"./ui\";\n\nconst Input: React.FC<IFieldComponent> = (props) => {\n  return (\n    <FieldContainer name={props.fieldInfo.fieldName} error={props.error} isEditMode={props.isEditMode}>\n      <StyledField {...props.fieldInfo} {...props.field} error={props.error} disabled={!props.isEditMode} autocomplete=\"disabled\" />\n    </FieldContainer>\n  )\n}\n\nexport default Input","import React from \"react\";\nimport FieldContainer from \"./FieldContainer\";\nimport { IFieldComponent } from \"./interfaces\";\nimport { StyledTextArea } from \"./ui\";\n\n\nconst TextArea: React.FC<IFieldComponent> = (props) => {\n  return (\n    <FieldContainer name={props.fieldInfo.fieldName} error={props.error} isEditMode={props.isEditMode}>\n      <StyledTextArea {...props.fieldInfo} {...props.field} error={props.error} disabled={!props.isEditMode} />\n    </FieldContainer>\n  )\n}\n\nexport default TextArea","import React from \"react\";\nimport { useController } from \"react-hook-form\";\nimport Input from \"../../components/Input\";\nimport TextArea from \"../../components/TextArea\";\nimport { IFieldComponent } from \"../../components/interfaces\";\nimport { IFormField } from \"./interfaces\";\n\n\n\nconst FieldComponent: React.FC<IFieldComponent> = (props) => {\n  switch (props.fieldInfo.type) {\n    case 'textarea':\n      return <TextArea {...props} />\n\n    default:\n      return <Input {...props} />\n  }\n}\n\nconst FormField: React.FC<IFormField> = ({ control, fieldInfo, name, isEditMode }) => {\n  const { field, fieldState } = useController({\n    control,\n    name\n  });\n\n\n  return <FieldComponent fieldInfo={fieldInfo} field={field} error={fieldState.error} isEditMode={isEditMode} />\n\n}\n\nexport default FormField","import React, { useState, useCallback } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { Wrapper, Sidebar, Content, ElementWrapper, FieldWrapper, RemoveIcon, Button, Form } from './ui';\n\nimport { FormItem, IFormItemList, IFormPreview, IFormValues } from './interfaces';\nimport { EMAIL, PHONE, URL, DESCRIPTION, NOTES, SIGNATURE, DATE, TYPES_MAP } from \"./constants\";\nimport FormField from \"./FormField\";\n\n\nconst validationSchema = yup.object().shape({\n  [EMAIL]: yup.string().email(),\n  [URL]: yup.string().url(),\n  [PHONE]: yup.string().max(20).min(3),\n  [DESCRIPTION]: yup.string().max(255).min(0),\n  [NOTES]: yup.string().max(128).min(3),\n  [SIGNATURE]: yup.string().max(15).min(2),\n  [DATE]: yup.date()\n})\n\n\nconst formFields = [\n  EMAIL, PHONE, URL, DESCRIPTION, NOTES, SIGNATURE, DATE\n]\n\nconst ElementList: React.FC<IFormItemList> = ({ formFields, clickHandler }) => {\n  return (\n    <React.Fragment>\n      {formFields.map(\n        (item: FormItem) => (\n          <ElementWrapper onClick={() => clickHandler(item)}>{TYPES_MAP[item].fieldName}</ElementWrapper>\n        ))\n      }\n    </React.Fragment>\n  )\n}\n\nconst FormPreview: React.FC<IFormPreview> = ({ fields, removeHandler, isEditMode, control }) => {\n  return (\n    <Form isEditMode={isEditMode}>\n      {fields.map(\n        (item: FormItem, index) => (\n          <FieldWrapper>\n            <FormField fieldInfo={TYPES_MAP[item]} name={item} control={control} isEditMode={isEditMode} />\n\n            {isEditMode && <RemoveIcon onClick={() => removeHandler(index)}/>}\n          </FieldWrapper>\n        ))\n      }\n    </Form>\n  )\n}\n\n\nconst FormPage = () => {\n  const [chosenFields, setChosenFields] = useState([])\n  const [isEditMode, setEditMode] = useState(true)\n\n  const { control, formState } = useForm<IFormValues>({\n    mode: \"onChange\",\n    resolver: yupResolver(validationSchema),\n  });\n\n  const clickHandler = useCallback(\n    (fieldName) => isEditMode && setChosenFields(prev => prev.concat(fieldName)),\n    [isEditMode]\n  )\n  \n  const removeHandler = useCallback(\n    (index) => isEditMode && setChosenFields(prev => prev.filter((_, i) => index !== i)),\n    [isEditMode]\n  )\n\n  const toggleModeHandler = useCallback(\n    () => setEditMode(prev => !prev),\n    []\n  )\n\n  return (\n    <Wrapper>\n      <Sidebar>\n        <ElementList formFields={formFields} clickHandler={clickHandler} />\n      </Sidebar>\n      <Content>\n        <FormPreview fields={chosenFields} removeHandler={removeHandler} isEditMode={isEditMode} control={control} />\n\n        {\n        (chosenFields.length > 0 && Object.keys(formState.errors).length === 0) &&\n          <Button onClick={toggleModeHandler}>{isEditMode ? 'Preview' : 'Edit'} </Button>\n        }\n      </Content>\n    </Wrapper>\n  )\n}\n\nexport default FormPage","import React from 'react';\nimport { createGlobalStyle } from 'styled-components'\nimport FormPage from './features/FormPage';\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    padding: 0;\n    margin: 0;\n    font-family: 'Courier New', Courier, monospace;\n    \n  }\n\n  * {\n    box-sizing: border-box\n  }\n`\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <GlobalStyles />\n      <FormPage />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}